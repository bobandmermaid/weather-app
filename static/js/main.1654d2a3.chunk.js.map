{"version":3,"sources":["components/Search.js","utils/date.js","components/Location.js","components/Weather.js","utils/WeatherApi.js","utils/config.js","components/App.js","reportWebVitals.js","index.js"],"names":["Search","props","className","onSubmit","event","preventDefault","onAddCity","type","placeholder","onChange","setCity","target","value","dataCity","minLength","maxLength","required","setDate","date","Date","month","getMonth","day","getDay","getDate","Location","weather","name","Weather","Math","round","main","temp","description","api","config","getWeatherApi","keyword","fetch","baseUrl","key","lang","then","res","ok","json","Promise","reject","bind","catch","err","this","App","useState","city","setWeather","undefined","result","console","log","message","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MA2BeA,MAzBf,SAAgBC,GAQd,OACE,uBAAMC,UAAU,SAASC,SAP3B,SAAsBC,GACpBA,EAAMC,iBAENJ,EAAMK,aAIN,UACE,uBACEC,KAAK,OACLL,UAAU,gBACVM,YAAY,+EACZC,SAAU,SAAAL,GAAK,OAAIH,EAAMS,QAAQN,EAAMO,OAAOC,QAC9CA,MAAOX,EAAMY,SACbC,UAAU,IACVC,UAAU,KACVC,UAAQ,IAEV,wBAAQT,KAAK,SAASL,UAAU,wBAAhC,sDCXSe,MAXf,WACE,IAGMC,EAAO,IAAIC,KACXC,EAJS,CAAC,uCAAU,6CAAW,2BAAQ,uCAAU,qBAAO,2BAAQ,2BAAQ,6CAAW,mDAAY,6CAAW,uCAAU,8CAIrGF,EAAKG,YACpBC,EAJO,CAAC,qEAAe,qEAAe,6CAAW,iCAAS,6CAAW,6CAAW,8CAIrEJ,EAAKK,UAEtB,MAAM,GAAN,OAAUD,EAAV,YAAiBJ,EAAKM,UAAtB,YAAmCJ,ICKtBK,MAVf,SAAkBxB,GAEhB,OACE,sBAAKC,UAAU,WAAf,UACE,qBAAKA,UAAU,kBAAf,SAAkCD,EAAMyB,QAAQC,OAChD,qBAAKzB,UAAU,iBAAf,SAAiCe,UCMxBW,MAZf,SAAiB3B,GAEf,OACE,sBAAKC,UAAU,UAAf,UACE,sBAAKA,UAAU,gBAAf,UACG2B,KAAKC,MAAM7B,EAAMyB,QAAQK,KAAKC,MADjC,UAGA,qBAAK9B,UAAU,uBAAf,SAAuCD,EAAMyB,QAAQA,QAAQ,GAAGO,kB,OCgBvDC,EADH,IArBV,WAAYC,GAAS,IAAD,gCAMpBC,cAAgB,SAAAC,GACd,OAAOC,MAAM,GAAD,OAAI,EAAKC,QAAT,qBAA6BF,EAA7B,+BAA2D,EAAKG,IAAhE,iBAA4E,EAAKC,OAC1FC,MAAK,SAAAC,GACJ,OAAIA,EAAIC,GACCD,EAAIE,OAEAF,EAAIE,OACLH,KAAKI,QAAQC,OAAOC,KAAKF,aAEtCG,OAAM,SAACC,GACN,MAAMA,MAfVC,KAAKZ,QAAUJ,EAAOI,QACtBY,KAAKX,IAAML,EAAOK,IAClBW,KAAKV,KAAON,EAAOM,KAkBX,CCxBG,CACbF,QAAS,2CACTC,IAAK,mCACLC,KAAM,OCgDOW,MA7Cf,WAAgB,IAAD,EAEWC,mBAAS,IAFpB,mBAENC,EAFM,KAEA5C,EAFA,OAGiB2C,mBAAS,IAH1B,mBAGN3B,EAHM,KAGG6B,EAHH,KAeb,OACE,qBAAKrD,eACcsD,IAAjB9B,EAAQK,KACJL,EAAQK,KAAKC,KAAO,GACpB,eACA,eACA,MALN,SAOE,sBAAK9B,UAAU,OAAf,UACE,cAAC,EAAD,CACEW,SAAUyC,EACVhD,UArBR,WACE4B,EAAIE,cAAckB,GACfZ,MAAK,SAAAe,GACJF,EAAWE,GACX/C,EAAQ,OAETuC,OAAM,SAAAC,GAAG,OAAIQ,QAAQC,IAAIT,EAAIU,aAgB1BlD,QAASA,SAGO8C,IAAjB9B,EAAQK,KACP,qCACE,cAAC,EAAD,CACEL,QAASA,IAEX,cAAC,EAAD,CACEA,QAASA,OAGZ,oBAAIxB,UAAU,aAAd,mKCjCI2D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1654d2a3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Search(props) {\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    props.onAddCity()\r\n  }\r\n\r\n  return (\r\n    <form className='search' onSubmit={handleSubmit}>\r\n      <input\r\n        type='text'\r\n        className='search__input'\r\n        placeholder='Введите город...'\r\n        onChange={event => props.setCity(event.target.value)}\r\n        value={props.dataCity}\r\n        minLength='2'\r\n        maxLength='32'\r\n        required\r\n      />\r\n      <button type=\"submit\" className=\"button search__button\">Искать</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","function setDate () {\r\n  const months = ['Января', 'Февраля', 'Мара', 'Апреля', 'Мая', 'Июня', 'Июля', 'Августа', 'Сентября', 'Октября', 'Ноября', 'Декабря'];\r\n  const days = ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'];\r\n\r\n  const date = new Date();\r\n  const month = months[date.getMonth()];\r\n  const day = days[date.getDay()];\r\n\r\n  return `${day} ${date.getDate()} ${month}`;\r\n}\r\n\r\nexport default setDate;\r\n","import React from \"react\";\r\nimport setDate from '../utils/date'\r\n\r\nfunction Location(props) {\r\n\r\n  return (\r\n    <div className='location'>\r\n      <div className='location__title'>{props.weather.name}</div>\r\n      <div className='location__date'>{setDate()}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Location;\r\n","import React from \"react\";\r\n\r\nfunction Weather(props) {\r\n\r\n  return (\r\n    <div className='weather'>\r\n      <div className='weather__temp'>\r\n        {Math.round(props.weather.main.temp)}°\r\n      </div>\r\n      <div className='weather__description'>{props.weather.weather[0].description}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Weather;\r\n","import config from \"./config\";\r\n\r\nclass WeatherApi {\r\n  constructor(config) {\r\n    this.baseUrl = config.baseUrl;\r\n    this.key = config.key;\r\n    this.lang = config.lang;\r\n  }\r\n\r\n  getWeatherApi = keyword => {\r\n    return fetch(`${this.baseUrl}weather?q=${keyword}&units=metric&appid=${this.key}&lang=${this.lang}`)\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        const json = res.json();\r\n        return json.then(Promise.reject.bind(Promise))\r\n      })\r\n      .catch((err) => {\r\n        throw err;\r\n      })\r\n  }\r\n}\r\n\r\nconst api = new WeatherApi(config);\r\nexport default api;\r\n","const config = {\r\n  baseUrl: 'https://api.openweathermap.org/data/2.5/',\r\n  key: 'ab59db48104dfb0439e2e12a1c063ae6',\r\n  lang: 'ru'\r\n};\r\n\r\nexport default config;\r\n","import React, { useState } from 'react';\nimport Search from \"./Search\";\nimport Location from \"./Location\";\nimport Weather from \"./Weather\";\nimport api from \"../utils/WeatherApi\";\n\nfunction App() {\n\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState({});\n\n  function handleSearch () {\n    api.getWeatherApi(city)\n      .then(result => {\n        setWeather(result);\n        setCity('');\n      })\n      .catch(err => console.log(err.message))\n\n  }\n\n  return (\n    <div className={\n      weather.main !== undefined\n        ? weather.main.temp > 10\n        ? 'app app_warm'\n        : 'app app_cold'\n        : 'app'\n    }>\n      <div className='root'>\n        <Search\n          dataCity={city}\n          onAddCity={handleSearch}\n          setCity={setCity}\n        />\n\n        {weather.main !== undefined ?\n          <>\n            <Location\n              weather={weather}\n            />\n            <Weather\n              weather={weather}\n            />\n          </>\n         : <h1 className='text-title'>Какая погода в вашем городе?</h1> }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}